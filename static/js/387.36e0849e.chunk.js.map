{"version":3,"file":"static/js/387.36e0849e.chunk.js","mappings":"wRAEaA,EAAUC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,uGAOpBC,EAAaH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,0EAMtBG,EAAWL,EAAAA,GAAAA,GAASM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,2GAQpBK,EAAeP,EAAAA,GAAAA,GAASQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,6FAMxBO,EAAWT,EAAAA,GAAAA,IAAUU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,oDAOrBS,GAFYX,EAAAA,GAAAA,IAAUY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,QAEXF,EAAAA,GAAAA,GAASa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,mCAIpBY,EAAad,EAAAA,GAAAA,EAAQe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,0J,SCyBlC,EApDa,WACX,IAAQc,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAepB,OAbAI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAESC,EAAAA,EAAAA,IAAenB,GAAS,KAAD,EAAAc,EAAAE,EAAAI,KAAtCd,EAAIQ,EAAJR,KACRC,EAAQD,GAAMU,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEdM,QAAQC,IAAGP,EAAAK,IAAQ,yBAAAL,EAAAQ,OAAA,GAAAX,EAAA,kBAEtB,kBAPc,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KASfjB,GACF,GAAG,CAACT,KAGF2B,EAAAA,EAAAA,MAAC5C,EAAO,CAAA6C,SAAA,EACNC,EAAAA,EAAAA,KAAC1C,EAAU,CAAAyC,SAAC,SACXtB,EAAKwB,QACJD,EAAAA,EAAAA,KAACxC,EAAQ,CAAAuC,SACNtB,EAAKyB,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAYH,EAAZG,aAAcC,EAASJ,EAATI,UAAS,OAC5CT,EAAAA,EAAAA,MAACpC,EAAY,CAAC8C,UAAU,YAAWT,SAAA,CAChCO,GACCN,EAAAA,EAAAA,KAAA,OACES,IAAG,kCAAAC,OAAoCJ,GACvCK,IAAG,GAAAD,OAAKL,EAAI,eAGdL,EAAAA,EAAAA,KAAA,OACES,IAAG,oDACHE,IAAG,GAAAD,OAAKL,EAAI,eAIhBP,EAAAA,EAAAA,MAAClC,EAAQ,CAAAmC,SAAA,EACPC,EAAAA,EAAAA,KAAClC,EAAQ,CAAAiC,SAAEM,KACXP,EAAAA,EAAAA,MAAA,KAAAC,SAAA,CAAG,cAAYQ,UAfsBH,EAiB1B,OAInBJ,EAAAA,EAAAA,KAAC/B,EAAU,CAAA8B,SAAC,wDAMpB,C,+LC7DMa,EAAU,6BACVC,EAAU,mCAEHC,EAAgB,eAAAjC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAA+B,EAAAC,EAAA,OAAAjC,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACP4B,EAAAA,EAAAA,IAAU,2DAADP,OAC6BG,IAC3D,KAAD,EAFW,OAEXE,EAAA5B,EAAAI,KAFOyB,EAAID,EAAJC,KAAI7B,EAAA+B,OAAA,SAILF,GAAI,wBAAA7B,EAAAQ,OAAA,GAAAX,EAAA,KACZ,kBAN4B,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAQhBsB,EAAgB,eAAAhB,GAAArB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAqC,EAAMC,GAAK,IAAAC,EAAAN,EAAA,OAAAjC,IAAAA,MAAA,SAAAwC,GAAA,cAAAA,EAAAnC,KAAAmC,EAAAlC,MAAA,cAAAkC,EAAAlC,KAAA,EAClB4B,EAAAA,EAAAA,IAAU,GAADP,OAC3BE,EAAO,4BAAAF,OAA2BG,EAAO,0BAAAH,OAAyBW,EAAK,gCAC1E,KAAD,EAFW,OAEXC,EAAAC,EAAAhC,KAFOyB,EAAIM,EAAJN,KAAIO,EAAAL,OAAA,SAILF,GAAI,wBAAAO,EAAA5B,OAAA,GAAAyB,EAAA,KACZ,gBAN4BI,GAAA,OAAArB,EAAAP,MAAA,KAAAC,UAAA,KAQhB4B,EAAc,eAAAC,GAAA5C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4C,EAAMxD,GAAO,IAAAyD,EAAAZ,EAAA,OAAAjC,IAAAA,MAAA,SAAA8C,GAAA,cAAAA,EAAAzC,KAAAyC,EAAAxC,MAAA,cAAAwC,EAAAxC,KAAA,EAClB4B,EAAAA,EAAAA,IAAU,GAADP,OAC3BE,EAAO,aAAAF,OAAYvC,EAAO,aAAAuC,OAAYG,EAAO,oBAChD,KAAD,EAFW,OAEXe,EAAAC,EAAAtC,KAFOyB,EAAIY,EAAJZ,KAAIa,EAAAX,OAAA,SAILF,GAAI,wBAAAa,EAAAlC,OAAA,GAAAgC,EAAA,KACZ,gBAN0BG,GAAA,OAAAJ,EAAA9B,MAAA,KAAAC,UAAA,KAQdP,EAAc,eAAAyC,GAAAjD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiD,EAAM7D,GAAO,IAAA8D,EAAAjB,EAAA,OAAAjC,IAAAA,MAAA,SAAAmD,GAAA,cAAAA,EAAA9C,KAAA8C,EAAA7C,MAAA,cAAA6C,EAAA7C,KAAA,EAClB4B,EAAAA,EAAAA,IAAU,GAADP,OAC3BE,EAAO,aAAAF,OAAYvC,EAAO,qBAAAuC,OAAoBG,EAAO,oBACxD,KAAD,EAFW,OAEXoB,EAAAC,EAAA3C,KAFOyB,EAAIiB,EAAJjB,KAAIkB,EAAAhB,OAAA,SAILF,GAAI,wBAAAkB,EAAAvC,OAAA,GAAAqC,EAAA,KACZ,gBAN0BG,GAAA,OAAAJ,EAAAnC,MAAA,KAAAC,UAAA,KAQduC,EAAiB,eAAAC,GAAAvD,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuD,EAAMnE,GAAO,IAAAoE,EAAAvB,EAAA,OAAAjC,IAAAA,MAAA,SAAAyD,GAAA,cAAAA,EAAApD,KAAAoD,EAAAnD,MAAA,cAAAmD,EAAAnD,KAAA,EACrB4B,EAAAA,EAAAA,IAAU,GAADP,OAC3BE,EAAO,aAAAF,OAAYvC,EAAO,sBAAAuC,OAAqBG,EAAO,2BACzD,KAAD,EAFW,OAEX0B,EAAAC,EAAAjD,KAFOyB,EAAIuB,EAAJvB,KAAIwB,EAAAtB,OAAA,SAILF,GAAI,wBAAAwB,EAAA7C,OAAA,GAAA2C,EAAA,KACZ,gBAN6BG,GAAA,OAAAJ,EAAAzC,MAAA,KAAAC,UAAA,I","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin-top: 30px;\n  padding-right: 80px;\n  padding-left: 80px;\n  padding-bottom: 40px;\n`;\n\nexport const CastHeader = styled.h3`\n  font-size: 25px;\n  font-weight: 500;\n  text-align: center;\n`;\n\nexport const CastList = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  align-items: center;\n  gap: 40px;\n  flex-wrap: wrap;\n`;\n\nexport const CastListItem = styled.li`\n  width: calc((100% - 4 * 40px) / 5);\n  height: 400px;\n  word-wrap: break-word;\n`;\n\nexport const CastInfo = styled.div`\n  margin-top: 20px;\n  max-width: 220px;\n`;\n\nexport const CastImage = styled.img``;\n\nexport const CastName = styled.h3`\n  margin-bottom: 10px;\n`;\n\nexport const NoCastText = styled.p`\n  margin: 30px auto 0 auto;\n  text-align: center;\n  padding: 20px;\n  background-color: #f8f8f8;\n  border-radius: 5px;\n  max-width: 500px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../../services/api';\nimport {\n  CastHeader,\n  CastInfo,\n  CastList,\n  CastListItem,\n  CastName,\n  NoCastText,\n  Wrapper,\n} from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const { cast } = await fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <CastHeader>Cast</CastHeader>\n      {cast.length ? (\n        <CastList>\n          {cast.map(({ id, name, profile_path, character }) => (\n            <CastListItem className=\"cast-card\" key={id}>\n              {profile_path ? (\n                <img\n                  src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                  alt={`${name} profile`}\n                />\n              ) : (\n                <img\n                  src={`https://via.placeholder.com/200x300?text=No+Image`}\n                  alt={`${name} profile`}\n                />\n              )}\n\n              <CastInfo>\n                <CastName>{name}</CastName>\n                <p>Character: {character}</p>\n              </CastInfo>\n            </CastListItem>\n          ))}\n        </CastList>\n      ) : (\n        <NoCastText>\n          We don't have any information about the cast yet.\n        </NoCastText>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '53812a41c49e9fda09ab7c9940def49e';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n\n  return data;\n};\n\nexport const fetchMovieByName = async query => {\n  const { data } = await axios.get(\n    `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return data;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${baseURL}/3/movie/${movieId}}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return data;\n};\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CastHeader","_templateObject2","CastList","_templateObject3","CastListItem","_templateObject4","CastInfo","_templateObject5","CastName","_templateObject6","_templateObject7","NoCastText","_templateObject8","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieCast","_cast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","length","map","_ref2","id","name","profile_path","character","className","src","concat","alt","baseURL","API_KEY","fetchTrendMovies","_yield$axios$get","data","axios","abrupt","fetchMovieByName","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}